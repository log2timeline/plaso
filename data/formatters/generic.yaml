# Event formatters.

type: 'conditional'
data_type: 'apache:access'
message:
- 'http_request: {http_request}'
- 'from: {ip_address}'
- 'code: {http_response_code}'
- 'referer: {http_request_referer}'
- 'user_agent: {http_request_user_agent}'
- 'server_name: {server_name}'
- 'port: {port_number}'
short_message:
- '{http_request}'
- 'from: {ip_address}'
short_source: 'LOG'
source: 'Apache Access'
---
type: 'conditional'
data_type: 'apt:history:line'
message:
- '{packages}'
- '[{command}]'
- '[{error}]'
- '[{requester}]'
short_message:
- '{packages}'
short_source: 'LOG'
source: 'APT History Log'
---
type: 'basic'
data_type: 'bash:history:command'
message: 'Command executed: {command}'
short_message: '{command}'
short_source: 'LOG'
source: 'Bash History'
---
type: 'conditional'
data_type: 'cups:ipp:event'
message:
- 'Status: {status}'
- 'User: {user}'
- 'Owner: {owner}'
- 'Job Name: {job_name}'
- 'Application: {application}'
- 'Document type: {type_doc}'
- 'Printer: {printer_id}'
short_message:
- 'Status: {status}'
- 'Job Name: {job_name}'
short_source: 'LOG'
source: 'CUPS IPP Log'
---
type: 'conditional'
data_type: 'docker:json:container'
message:
- 'Action: {action}'
- 'Container Name: {container_name}'
- 'Container ID: {container_id}'
separator: ', '
short_message:
- 'Action: {action}'
- 'Container Name: {container_name}'
- 'Container ID: {container_id}'
short_source: 'DOCKER'
source: 'Docker Container'
---
type: 'conditional'
data_type: 'docker:json:container:log'
message:
- 'Text: {log_line}'
- 'Container ID: {container_id}'
- 'Source: {log_source}'
separator: ', '
short_message:
- 'Text: {log_line}'
- 'Container ID: {container_id}'
- 'Source: {log_source}'
short_source: 'DOCKER'
source: 'Docker Container Logs'
---
type: 'conditional'
data_type: 'docker:json:layer'
message:
- 'Command: {command}'
- 'Layer ID: {layer_id}'
separator: ', '
short_message:
- 'Command: {command}'
- 'Layer ID: {layer_id}'
short_source: 'DOCKER'
source: 'Docker Layer'
---
type: 'conditional'
data_type: 'dpkg:line'
message:
- '{body}'
short_message:
- '{body}'
short_source: 'LOG'
source: 'dpkg log file'
---
type: 'conditional'
data_type: 'file_history:namespace:event'
message:
- 'Filename: {original_filename}'
- 'Identifier: {identifier}'
- 'Parent Identifier: {parent_identifier}'
- 'Attributes: {file_attribute}'
- 'USN number: {usn_number}'
short_message:
- 'Filename: {original_filename}'
short_source: 'LOG'
source: 'File History Namespace'
---
type: 'conditional'
data_type: 'p2p:bittorrent:transmission'
message:
- 'Saved to {destination}'
- 'Minutes seeded: {seedtime}'
separator: '; '
short_message:
- 'Saved to {destination}'
- 'Minutes seeded: {seedtime}'
short_source: 'TORRENT'
source: 'Transmission Active Torrents'
---
type: 'conditional'
data_type: 'p2p:bittorrent:utorrent'
message:
- 'Torrent {caption}'
- 'Saved to {path}'
- 'Minutes seeded: {seedtime}'
separator: '; '
short_message:
- 'Torrent {caption}'
- 'Saved to {path}'
- 'Minutes seeded: {seedtime}'
short_source: 'TORRENT'
source: 'uTorrent Active Torrents'
---
type: 'conditional'
data_type: 'syslog:cron:task_run'
message:
- 'Cron ran: {command}'
- 'for user: {username}'
- 'pid: {pid}'
short_message:
- '{body}'
short_source: 'LOG'
source: 'Cron log'
---
type: 'basic'
data_type: 'zeitgeist:activity'
message: '{subject_uri}'
short_message: '{subject_uri}'
short_source: 'LOG'
source: 'Zeitgeist activity log'
