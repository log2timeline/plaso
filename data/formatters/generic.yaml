# Event formatters.

type: 'conditional'
data_type: 'apache:access'
message:
- 'http_request: {http_request}'
- 'from: {ip_address}'
- 'code: {http_response_code}'
- 'referer: {http_request_referer}'
- 'user_agent: {http_request_user_agent}'
- 'server_name: {server_name}'
- 'port: {port_number}'
short_message:
- '{http_request}'
- 'from: {ip_address}'
short_source: 'LOG'
source: 'Apache Access'
---
type: 'conditional'
data_type: 'apt:history:line'
message:
- '{packages}'
- '[{command}]'
- '[{error}]'
- '[{requester}]'
short_message:
- '{packages}'
short_source: 'LOG'
source: 'APT History Log'
---
type: 'basic'
data_type: 'bash:history:command'
message: 'Command executed: {command}'
short_message: '{command}'
short_source: 'LOG'
source: 'Bash History'
---
type: 'conditional'
data_type: 'cups:ipp:event'
message:
- 'Status: {status}'
- 'User: {user}'
- 'Owner: {owner}'
- 'Job Name: {job_name}'
- 'Application: {application}'
- 'Document type: {type_doc}'
- 'Printer: {printer_id}'
short_message:
- 'Status: {status}'
- 'Job Name: {job_name}'
short_source: 'LOG'
source: 'CUPS IPP Log'
---
type: 'conditional'
data_type: 'docker:json:container'
message:
- 'Action: {action}'
- 'Container Name: {container_name}'
- 'Container ID: {container_id}'
separator: ', '
short_message:
- 'Action: {action}'
- 'Container Name: {container_name}'
- 'Container ID: {container_id}'
short_source: 'DOCKER'
source: 'Docker Container'
---
type: 'conditional'
data_type: 'docker:json:container:log'
message:
- 'Text: {log_line}'
- 'Container ID: {container_id}'
- 'Source: {log_source}'
separator: ', '
short_message:
- 'Text: {log_line}'
- 'Container ID: {container_id}'
- 'Source: {log_source}'
short_source: 'DOCKER'
source: 'Docker Container Logs'
---
type: 'conditional'
data_type: 'docker:json:layer'
message:
- 'Command: {command}'
- 'Layer ID: {layer_id}'
separator: ', '
short_message:
- 'Command: {command}'
- 'Layer ID: {layer_id}'
short_source: 'DOCKER'
source: 'Docker Layer'
---
type: 'conditional'
data_type: 'dpkg:line'
message:
- '{body}'
short_message:
- '{body}'
short_source: 'LOG'
source: 'dpkg log file'
---
type: 'conditional'
data_type: 'file_history:namespace:event'
message:
- 'Filename: {original_filename}'
- 'Identifier: {identifier}'
- 'Parent Identifier: {parent_identifier}'
- 'Attributes: {file_attribute}'
- 'USN number: {usn_number}'
short_message:
- 'Filename: {original_filename}'
short_source: 'LOG'
source: 'File History Namespace'
---
type: 'conditional'
data_type: 'p2p:bittorrent:transmission'
message:
- 'Saved to {destination}'
- 'Minutes seeded: {seedtime}'
separator: '; '
short_message:
- 'Saved to {destination}'
- 'Minutes seeded: {seedtime}'
short_source: 'TORRENT'
source: 'Transmission Active Torrents'
---
type: 'conditional'
data_type: 'p2p:bittorrent:utorrent'
message:
- 'Torrent {caption}'
- 'Saved to {path}'
- 'Minutes seeded: {seedtime}'
separator: '; '
short_message:
- 'Torrent {caption}'
- 'Saved to {path}'
- 'Minutes seeded: {seedtime}'
short_source: 'TORRENT'
source: 'uTorrent Active Torrents'
---
type: 'conditional'
data_type: 'selinux:line'
message:
- '['
- 'audit_type: {audit_type}'
- ', pid: {pid}'
- ']'
- ' {body}'
separator: ''
short_message:
- '['
- 'audit_type: {audit_type}'
- ', pid: {pid}'
- ']'
- ' {body}'
short_source: 'LOG'
source: 'Audit log File'
---
type: 'conditional'
data_type: 'shell:zsh:history'
message:
- '{command}'
- 'Time elapsed: {elapsed_seconds} seconds'
short_message:
- '{command}'
short_source: 'HIST'
source: 'Zsh Extended History'
---
type: 'conditional'
data_type: 'skydrive:log:old:line'
message:
- '[{source_code}]'
- '({log_level})'
- '{text}'
short_message:
- '{text}'
short_source: 'LOG'
source: 'SkyDrive Log File'
---
type: 'conditional'
data_type: 'skydrive:log:line'
message:
- '[{module}'
- '{source_code}'
- '{log_level}]'
- '{detail}'
short_message:
- '{detail}'
short_source: 'LOG'
source: 'SkyDrive Log File'
---
type: 'conditional'
data_type: 'skype:event:account'
message:
- '{username}'
- '[{email}]'
- 'Country: {country}'
short_message:
- '{username}'
- '[{email}]'
- 'Country: {country}'
short_source: 'LOG'
source: 'Skype Account'
---
type: 'conditional'
data_type: 'skype:event:call'
message:
- 'From: {src_call}'
- 'To: {dst_call}'
- '[{call_type}]'
short_message:
- 'From: {src_call}'
- 'To: {dst_call}'
- '[{call_type}]'
short_source: 'LOG'
source: 'Skype Call'
---
type: 'conditional'
data_type: 'skype:event:chat'
message:
- 'From: {from_account}'
- 'To: {to_account}'
- '[{title}]'
- 'Message: [{text}]'
short_message:
- 'From: {from_account}'
- 'To: {to_account}'
short_source: 'LOG'
source: 'Skype Chat MSG'
---
type: 'conditional'
data_type: 'skype:event:sms'
message:
- 'To: {number}'
- '[{text}]'
short_message:
- 'To: {number}'
- '[{text}]'
short_source: 'LOG'
source: 'Skype SMS'
---
type: 'conditional'
data_type: 'skype:event:transferfile'
message:
- 'Source: {source}'
- 'Destination: {destination}'
- 'File: {transferred_filename}'
- '[{action_type}]'
short_message:
- 'Source: {source}'
- 'Destination: {destination}'
- 'File: {transferred_filename}'
- '[{action_type}]'
short_source: 'LOG'
source: 'Skype Transfer Files'
---
type: 'conditional'
data_type: 'sophos:av:log'
message:
- '{text}'
short_message:
- '{text}'
short_source: 'LOG'
source: 'Sophos Anti-Virus log'
---
type: 'conditional'
data_type: 'syslog:comment'
message:
- '{body}'
separator: ''
short_message:
- '{body}'
short_source: 'LOG'
source: 'Log File'
---
type: 'conditional'
data_type: 'syslog:cron:task_run'
message:
- 'Cron ran: {command}'
- 'for user: {username}'
- 'pid: {pid}'
short_message:
- '{body}'
short_source: 'LOG'
source: 'Cron log'
---
type: 'conditional'
data_type: 'syslog:line'
message:
- '{severity} '
- '['
- '{reporter}'
- ', pid: {pid}'
- '] {body}'
separator: ''
short_message:
- '{severity} '
- '['
- '{reporter}'
- ', pid: {pid}'
- '] {body}'
short_source: 'LOG'
source: 'Log File'
---
type: 'conditional'
data_type: 'syslog:ssh:failed_connection'
message:
- 'Unsuccessful connection of user: {username}'
- 'from {address}:'
- '{port}'
- 'using authentication method: {authentication_method}'
- 'ssh pid: {pid}'
separator: ''
short_message:
- '{body}'
short_source: 'LOG'
source: 'SSH log'
---
type: 'conditional'
data_type: 'syslog:ssh:login'
message:
- 'Successful login of user: {username}'
- 'from {address}:'
- '{port}'
- 'using authentication method: {authentication_method}'
- 'ssh pid: {pid}'
separator: ''
short_message:
- '{body}'
short_source: 'LOG'
source: 'SSH log'
---
type: 'conditional'
data_type: 'syslog:ssh:opened_connection'
message:
- 'Connection opened {address}:'
- '{port}'
- 'ssh pid: {pid}'
separator: ''
short_message:
- '{body}'
short_source: 'LOG'
source: 'SSH log'
---
# It would be nice to have the _MACHINE_ID field, which is a unique identifier
# for the system, and hopefully more unique than the _HOSTNAME field.
# Unfortunately, journal files that have not been closed cleanly may contain
# entries that have no _MACHINE_ID field.
type: 'conditional'
data_type: 'systemd:journal'
message:
- '{hostname} '
- '['
- '{reporter}'
- ', pid: {pid}'
- '] {body}'
separator: ''
short_message:
- '{hostname} '
- '['
- '{reporter}'
- ', pid: {pid}'
- '] {body}'
short_source: 'LOG'
source: 'systemd-journal'
---
type: 'conditional'
data_type: 'systemd:journal:dirty'
message:
- '{hostname} '
- '['
- '{reporter}'
- ', pid: {pid}'
- '] {body}'
separator: ''
short_message:
- '{hostname} '
- '['
- '{reporter}'
- ', pid: {pid}'
- '] {body}'
short_source: 'LOG'
source: 'systemd-journal-dirty'
---
type: 'basic'
data_type: 'text:entry'
message: '{text}'
short_message: '{text}'
short_source: 'LOG'
source: 'Text File'
---
type: 'conditional'
data_type: 'vsftpd:log'
message:
- '{text}'
short_message:
- '{text}'
short_source: 'LOG'
source: 'vsftpd log'
---
type: 'conditional'
data_type: 'xchat:log:line'
message:
- '[nickname: {nickname}]'
- '{text}'
short_message:
- '[nickname: {nickname}]'
- '{text}'
short_source: 'LOG'
source: 'XChat Log File'
---
type: 'conditional'
data_type: 'xchat:scrollback:line'
message:
- '['
- 'nickname: {nickname}'
- ']'
- ' {text}'
separator: ''
short_message:
- '['
- 'nickname: {nickname}'
- ']'
- ' {text}'
short_source: 'LOG'
source: 'XChat Scrollback File'
---
type: 'basic'
data_type: 'zeitgeist:activity'
message: '{subject_uri}'
short_message: '{subject_uri}'
short_source: 'LOG'
source: 'Zeitgeist activity log'
