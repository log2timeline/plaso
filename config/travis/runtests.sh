#!/bin/bash
#
# Script to run tests on Travis-CI.
#
# This file is generated by l2tdevtools update-dependencies.py, any dependency
# related changes should be made in dependencies.ini.

# Exit on error.
set -e;

if test "${TARGET}" = "jenkins3";
then
	./config/jenkins/linux/run_end_to_end_tests_py3.sh "travis";

elif  test "${TARGET}" = "jenkins2";
then
	./config/jenkins/linux/run_end_to_end_tests.sh "travis";

elif test "${TRAVIS_OS_NAME}" = "osx";
then
	PYTHONPATH=/Library/Python/2.7/site-packages/ /usr/bin/python ./run_tests.py;

	python ./setup.py build

	python ./setup.py sdist

	python ./setup.py bdist

	if test -f tests/end-to-end.py;
	then
		PYTHONPATH=. python ./tests/end-to-end.py --debug -c config/end-to-end.ini;
	fi

elif test -n "${FEDORA_VERSION}";
then
	CONTAINER_NAME="fedora${FEDORA_VERSION}";

	if test -n "${TOXENV}";
	then
		TEST_COMMAND="tox -e ${TOXENV}";

	elif test "${TARGET}" = "pylint";
	then
		TEST_COMMAND="./config/travis/run_pylint.sh";

	elif test ${TRAVIS_PYTHON_VERSION} = "2.7";
	then
		TEST_COMMAND="python2 run_tests.py";
	else
		TEST_COMMAND="python3 run_tests.py";
	fi
	docker exec ${CONTAINER_NAME} sh -c "export LANG=en_US.UTF-8; cd plaso && ${TEST_COMMAND}";

elif test -n "${UBUNTU_VERSION}";
then
	CONTAINER_NAME="ubuntu${UBUNTU_VERSION}";

	if test -n "${TOXENV}";
	then
		TEST_COMMAND="tox -e ${TOXENV}";

	elif test "${TARGET}" = "pylint";
	then
		TEST_COMMAND="./config/travis/run_pylint.sh";

	elif test ${TRAVIS_PYTHON_VERSION} = "2.7";
	then
		TEST_COMMAND="python2 run_tests.py";
	else
		TEST_COMMAND="python3 run_tests.py";
	fi
	docker exec ${CONTAINER_NAME} sh -c "export LANG=en_US.UTF-8; cd plaso && ${TEST_COMMAND}";

elif test "${TRAVIS_OS_NAME}" = "linux";
then
	COVERAGE="/usr/bin/coverage";

	if ! test -x "${COVERAGE}";
	then
		# Ubuntu has renamed coverage.
		COVERAGE="/usr/bin/python-coverage";
	fi

	if test -n "${TOXENV}";
	then
		tox --sitepackages ${TOXENV};

	elif test "${TRAVIS_PYTHON_VERSION}" = "2.7";
	then
		${COVERAGE} erase
		${COVERAGE} run --source=plaso --omit="*_test*,*__init__*,*test_lib*" ./run_tests.py
	else
		python ./run_tests.py

		python ./setup.py build

		python ./setup.py sdist

		python ./setup.py bdist

		TMPDIR="${PWD}/tmp";
		TMPSITEPACKAGES="${TMPDIR}/lib/python${TRAVIS_PYTHON_VERSION}/site-packages";

		mkdir -p ${TMPSITEPACKAGES};

		PYTHONPATH=${TMPSITEPACKAGES} python ./setup.py install --prefix=${TMPDIR};

		if test -f tests/end-to-end.py;
		then
			PYTHONPATH=. python ./tests/end-to-end.py --debug -c config/end-to-end.ini;
		fi
	fi
fi
