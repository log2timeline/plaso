environment:
  matrix:
  - TARGET: windows_python27
    MACHINE_TYPE: "x86"
    PYTHON: "C:\\Python27"
  - TARGET: windows_python27
    MACHINE_TYPE: "amd64"
    PYTHON: "C:\\Python27-x64"
  - TARGET: windows_python36
    MACHINE_TYPE: "x86"
    PYTHON: "C:\\Python36"
  - TARGET: windows_python36
    MACHINE_TYPE: "amd64"
    PYTHON: "C:\\Python36-x64"

matrix:
  allow_failures:
  - TARGET: python36

install:
- cmd: '"C:\Program Files\Microsoft SDKs\Windows\v7.1\Bin\SetEnv.cmd" /x86 /release'
- ps: >-
    "[System.Net.ServicePointManager]::SecurityProtocol = [System.Net.SecurityProtocolType]::Tls12";
    $SQLiteReleaseYear = "2018";
    $SQLiteVersion = "3250300";
    If ($env:MACHINE_TYPE -eq "x86") {
      $SQLitePlatform = "win32-x86";
    } Else {
      $SQLitePlatform = "win64-x64";
    }
    $Url = "https://www.sqlite.org/${SQLiteReleaseYear}/sqlite-dll-${SQLitePlatform}-${SQLiteVersion}.zip";
    $DownloadPath = "C:\Projects\sqlite-dll-${SQLitePlatform}-${SQLiteVersion}.zip";
    (new-object net.webclient).DownloadFile($Url, $DownloadPath);
    $Output = Invoke-Expression -Command "& 'C:\\Program Files\\7-Zip\\7z.exe' -y -oC:\\Projects\\ x $DownloadPath 2>&1";
    Copy-Item -Force C:\Projects\sqlite3.dll "$env:PYTHON\\DLLs\\";
- cmd: "%PYTHON%\\python.exe -m pip install --upgrade pip"
- cmd: "%PYTHON%\\python.exe -m pip install pywin32 WMI"
- cmd: "%PYTHON%\\python.exe %PYTHON%\\Scripts\\pywin32_postinstall.py -install"
- cmd: git clone https://github.com/log2timeline/l2tdevtools.git ..\l2tdevtools
- cmd: if [%TARGET%]==[windows_python27] (
    mkdir dependencies &&
    set PYTHONPATH=..\l2tdevtools &&
    "%PYTHON%\\python.exe" ..\l2tdevtools\tools\update.py --download-directory dependencies --machine-type %MACHINE_TYPE% --msi-targetdir "%PYTHON%" --track dev PyYAML XlsxWriter artifacts bencode biplist bs4 certifi chardet dateutil dfdatetime dfvfs dfwinreg dtfabric elasticsearch-py funcsigs future idna libbde libesedb libevt libevtx libewf libfsapfs libfsntfs libfvde libfwnt libfwsi liblnk libmsiecf libolecf libqcow libregf libscca libsigscan libsmdev libsmraw libvhdi libvmdk libvshadow libvslvm lz4 mock pbr pefile psutil pycrypto pyparsing pysqlite pytsk3 pytz pyzmq requests six urllib3 yara-python )
- cmd: if [%TARGET%]==[windows_python36] (
    mkdir dependencies &&
    set PYTHONPATH=..\l2tdevtools &&
    "%PYTHON%\\python.exe" ..\l2tdevtools\tools\update.py --download-directory dependencies --machine-type %MACHINE_TYPE% --msi-targetdir "%PYTHON%" --track dev PyYAML XlsxWriter artifacts bencode biplist bs4 certifi chardet dateutil dfdatetime dfvfs dfwinreg dtfabric elasticsearch-py future idna libbde libesedb libevt libevtx libewf libfsapfs libfsntfs libfvde libfwnt libfwsi liblnk libmsiecf libolecf libqcow libregf libscca libsigscan libsmdev libsmraw libvhdi libvmdk libvshadow libvslvm lz4 mock pbr pefile psutil pycrypto pyparsing pytsk3 pytz pyzmq requests six urllib3 yara-python )

build: off

test_script:
- cmd: "%PYTHON%\\python.exe run_tests.py"
